[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "test-actions"
authors = [{ name = "Dimitri RODARIE", email = "d.rodarie@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"]
requires-python = ">=3.10"
version = "1.3.0"
dynamic = ["description"]
dependencies = [
    "numpy>=2.2.4",
    "pynrrd>=1.1.3",
    "scipy>=1.15.2",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-sugar>=1.0.0",
]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.5",
]

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'cover/html'
 --cov-report xml:'cover/coverage.xml'
"""

[tool.ruff]
exclude = [".venv"]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [ "E", "F", "UP", "B", "SIM", "I" ]
ignore = [ ]
fixable = [ "ALL" ]
unfixable = [ ]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-line-length = "dynamic"

[tool.bumpversion]
current_version = "1.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "--no-verify"

[tool.bumpversion.parts.pre_l]
values = ["dev", "a", "b", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "test_actions/__init__.py"
